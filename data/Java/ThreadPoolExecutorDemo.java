b'package threadPoolExecutor;\n\nimport java.util.concurrent.ArrayBlockingQueue;\nimport java.util.concurrent.ThreadPoolExecutor;\nimport java.util.concurrent.TimeUnit;\n\nimport static common.ThreadPoolConstants.CORE_POOL_SIZE;\nimport static common.ThreadPoolConstants.KEEP_ALIVE_TIME;\nimport static common.ThreadPoolConstants.MAX_POOL_SIZE;\nimport static common.ThreadPoolConstants.QUEUE_CAPACITY;\n\n\npublic class ThreadPoolExecutorDemo {\n\n    public static void main(String[] args) {\n\n        //\xe4\xbd\xbf\xe7\x94\xa8\xe9\x98\xbf\xe9\x87\x8c\xe5\xb7\xb4\xe5\xb7\xb4\xe6\x8e\xa8\xe8\x8d\x90\xe7\x9a\x84\xe5\x88\x9b\xe5\xbb\xba\xe7\xba\xbf\xe7\xa8\x8b\xe6\xb1\xa0\xe7\x9a\x84\xe6\x96\xb9\xe5\xbc\x8f\n        //\xe9\x80\x9a\xe8\xbf\x87ThreadPoolExecutor\xe6\x9e\x84\xe9\x80\xa0\xe5\x87\xbd\xe6\x95\xb0\xe8\x87\xaa\xe5\xae\x9a\xe4\xb9\x89\xe5\x8f\x82\xe6\x95\xb0\xe5\x88\x9b\xe5\xbb\xba\n        ThreadPoolExecutor executor = new ThreadPoolExecutor(\n                CORE_POOL_SIZE,\n                MAX_POOL_SIZE,\n                KEEP_ALIVE_TIME,\n                TimeUnit.SECONDS,\n                new ArrayBlockingQueue<>(QUEUE_CAPACITY),\n                new ThreadPoolExecutor.CallerRunsPolicy());\n\n        for (int i = 0; i < 10; i++) {\n            //\xe5\x88\x9b\xe5\xbb\xbaWorkerThread\xe5\xaf\xb9\xe8\xb1\xa1\xef\xbc\x88WorkerThread\xe7\xb1\xbb\xe5\xae\x9e\xe7\x8e\xb0\xe4\xba\x86Runnable \xe6\x8e\xa5\xe5\x8f\xa3\xef\xbc\x89\n            Runnable worker = new MyRunnable("" + i);\n            //\xe6\x89\xa7\xe8\xa1\x8cRunnable\n            executor.execute(worker);\n        }\n        //\xe7\xbb\x88\xe6\xad\xa2\xe7\xba\xbf\xe7\xa8\x8b\xe6\xb1\xa0\n        executor.shutdown();\n        while (!executor.isTerminated()) {\n        }\n        System.out.println("Finished all threads");\n    }\n}\n'